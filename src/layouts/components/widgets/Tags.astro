---
import parseTomlToJson from "@/lib/utils/parseTomlToJson";
import { getCollectionCTM } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import {
  getLocaleUrlCTM,
  useTranslations,
} from "@/lib/utils/languageParser.ts";
import { humanize } from "@/lib/utils/textConverter";

interface Tag {
  name: string;
  slug: string;
  count: number;
}

interface Props {
  class?: string;
}

const config = parseTomlToJson("./src/config/config.toml");
const posts = await getCollectionCTM(
  config.settings.blogFolder as "blog",
  Astro.currentLocale,
);

let tags = (await getTaxonomy(
  config.settings.blogFolder as "blog",
  "tags",
  Astro.currentLocale as string,
)) as Tag[];

tags = tags.map((tag) => {
  const count = posts.filter((post) =>
    post.data.tags?.includes(tag.name),
  ).length;

  const slug = getLocaleUrlCTM(
    tag.slug,
    Astro.currentLocale,
    `/${config.settings.blogFolder}/tag`,
  );

  return {
    ...tag,
    count,
    slug,
  };
});

const t = await useTranslations(Astro.currentLocale as string);

// Sort tags by count
tags = tags.sort((a, b) => b.count - a.count);
---

{
  tags && tags.length > 0 && (
    <div class="space-y-4">
      <h2 class="md:text-h4 text-h4-sm mb-3 pb-3">{t("widgets.tagsTitle")}</h2>
      <div class="flex flex-wrap gap-3">
        {tags.map((tag) => (
          <a
            href={tag.slug}
            title={`Filter posts by ${tag.name}`}
            class="bg-theme-light text-dark hover:text-light hover:bg-theme-dark inline-block px-4 py-2 font-medium capitalize transition">
            {humanize(tag.name)}
            {tag.count > 0 && ` (${tag.count})`}
          </a>
        ))}
      </div>
    </div>
  )
}
