---
import Base from "@/layouts/Base.astro";
import { getCollectionCTM } from "@/lib/contentParser.astro";
import { getEntryCTM } from "@/lib/contentParser.astro";
import { supportedLanguages } from "@/lib/utils/languageParser.ts";
import parseTomlToJson from "@/lib/utils/parseTomlToJson";
import TeamSingle from "@/components/TeamSingle.astro";
import Features from "@/components/sections/Features.astro";
import Breadcrumbs from "@/components/widgets/Breadcrumbs.astro";
import extractSlug from "@/lib/utils/extractSlug";

export async function getStaticPaths() {
  const paths = await Promise.all(
    supportedLanguages.map(async (lang) => {
      const config = parseTomlToJson("./src/config/config.toml");
      const { defaultLanguage, showDefaultLangInUrl } =
        config.settings.multilingual;

      const teamIndex = await getEntryCTM("team", "-index", lang.languageCode);

      let teamCollection = await getCollectionCTM("team", lang.languageCode);

      // If draft true in index.md file frontmatter don't include any page related to this page collection in production
      if (teamIndex?.data.draft && import.meta.env.PROD) {
        return [];
      }

      return teamCollection.map((team) => ({
        params: {
          lang:
            lang.languageCode === defaultLanguage && !showDefaultLangInUrl
              ? undefined
              : lang.languageCode,
          single: extractSlug(team).split("/").pop(),
        },
        props: {
          team,
        },
      }));
    }),
  );

  return paths.flat();
}

const { team } = Astro.props;
---

<Base {...team.data} fitToScreen={false}>
  <Breadcrumbs />
  <TeamSingle content={team} />
  <Features />
  <!-- <CallToAction sectionSpaceTop={false} /> -->
</Base>
